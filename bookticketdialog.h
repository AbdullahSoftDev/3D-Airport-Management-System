#ifndef BOOKTICKETDIALOG_H
#define BOOKTICKETDIALOG_H

#include <QDialog> // Base class for dialogs
#include <QStringList> // To return booking data as a list of strings

// Forward declaration of the Ui namespace
namespace Ui {
class BookTicketDialog;
}

class BookTicketDialog : public QDialog // Inherit from QDialog
{
    Q_OBJECT // Required for Qt's meta-object system (signals/slots)

public:
    explicit BookTicketDialog(QWidget *parent = nullptr);
    ~BookTicketDialog();

    // Getter methods to retrieve booking data after dialog is accepted
    QString getFlightNumber() const;
    QString getPassengerName() const;
    int getSeatsBooked() const;
    QString getBookingDateTime() const; // Returns date/time as a formatted string

signals:
    // This signal can be emitted when a new ticket is successfully booked.
    // The ManageBookingsView can connect to this to refresh its table.
    void bookingDataReady(const QStringList &bookingData);


private slots:
    // Slot connected to the OK/Accept button in the QDialogButtonBox
    void on_buttonBox_accepted();
    // Slot connected to the Cancel/Reject button in the QDialogButtonBox
    void on_buttonBox_rejected();

private:
    Ui::BookTicketDialog *ui; // Pointer to the UI object generated by uic

    // Helper to generate a unique booking ID
    QString generateBookingID() const;
    // Helper to calculate total fare (basic placeholder for now)
    double calculateTotalFare(int seats) const;
};

#endif // BOOKTICKETDIALOG_H
