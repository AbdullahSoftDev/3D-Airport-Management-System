#ifndef USERDIALOG_H
#define USERDIALOG_H

#include <QDialog> // Required for QDialog base class
#include <QString> // Required for QString type

// Forward declaration of the UI class, which is generated by Qt from userdialog.ui
namespace Ui {
class UserDialog;
}

class UserDialog : public QDialog
{
    Q_OBJECT // Macro required for Qt's meta-object system (signals/slots)

public:
    // Constructor for adding a new user (default constructor)
    // It takes a parent widget, which is good practice for Qt widgets.
    explicit UserDialog(QWidget *parent = nullptr);

    // Constructor for editing an existing user.
    // It takes the current username and password to pre-fill the dialog.
    explicit UserDialog(const QString &username, const QString &password, QWidget *parent = nullptr);

    // Destructor to clean up resources.
    ~UserDialog();

    // Public methods to retrieve the entered username and password from the dialog.
    QString getUsername() const;
    QString getPassword() const;

private slots:
    // Custom slot connected to the QDialogButtonBox's 'accepted()' signal.
    // This allows us to perform validation (e.g., check for empty fields) before
    // the dialog is actually accepted and closed.
    void on_buttonBox_accepted();

    // Custom slot connected to the QDialogButtonBox's 'rejected()' signal.
    // This will typically just close the dialog without saving.
    void on_buttonBox_rejected();

private:
    // Pointer to the UI object, which holds all the widgets defined in userdialog.ui.
    // It's initialized in the constructor.
    Ui::UserDialog *ui;
};

#endif // USERDIALOG_H
